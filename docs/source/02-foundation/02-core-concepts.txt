.. title:: Yet Another Sudoku | Foundation | Concepts

.. _core-concepts:

*************
Core Concepts
*************

Ccells
======

A :term:`Ccell` refers to any candidate in any cell as specified by its candidate value, row and column.
That is, a Ccell is the unique reference to a specific candidate in a cell.

Ccells are three-dimensional tuples of value, row and column, each dimension ranging
between 1 and 9.  In Sudoku, 729 unique (9 value x 9 row x 9 column) possible Ccells exist.  A
solved Sudoku puzzle comprises 81 unique Ccells of the 729 unique possibilities.  That is each cell
in the 9 row by 9 column has only one value, all values in all cells obeying
:ref:`Sudoku Rules <sudoku-rules>`.

The term Ccell is not to be confused with a:

*  :term:`Node`:  A further qualification of a ccell in a :term:`pattern` such as a net or chain.
   For example:  Ccells linked together in a chain form the Nodes between the links of the chain.
*  :term:`Candidate`:  A lesser reference to only the possible values in cells that obey Sudoku
   Rules.
*  :term:`Potential Elimination`:  A Synonym for Candidate, in the context of applying
   :term:`Conditional Logic` to reduce the set of Candidates in a Cell.

.. _cc_truth:

'A Truth' and 'The Truth'
=========================

'A Truth' and 'The Truth' describe the relationships of Ccells in a House or Cell.  For each
unsolved value in a House or Cell, 'A Truth' is a set of possible values within that :term:`House`
where at least one Ccell in that House will ultimately be True.

A Truth is unconditionally True for a puzzle.  A Truth is that set of Ccells in which one (yet to
be determined) element will be 'The Truth'.  'The Truth' is that last remaining Ccell in a Cell or
that only remaining uniquely valued Ccell in a House – The Solved Value.

'The Truth' is an individual element of 'A Truth'.

In a House, 'A Truth' is any set of same value Ccells in that house.  In a Cell, 'A Truth' is the
set of Ccells in that cell.  In a Suduko Grid, 324 Truths exist.  Nine Truths for each row,
column, box and cell in the grid.

.. figure:: images/truths-eg1.png
   :name: fig-truths-eg1
   :scale: 65%
   :alt: 'A Truth' and 'The Truth' Example
   :align: right
   :figwidth: 359px

   'A Truth' and 'The Truth' Example

   :raw-html:`<mong>....8+614.65+4.2.7+8+98..4..3+6.5+6..+4.....+926784..........6+2+87..9+6+14..5.6..93+936.1+4...|r3c6-=1|Pointing Locked Single||3r1c13,!-b2|r1c4-=3|+7+2+3+98+614+565+4+32+17+8+98+1+94+5+73+6+25+6+1+2+4+3+9+7+8+3+926784+5+1+4+7+8+1+9+5+2+36+2+87+5+39+6+14+1+45+76+2+893+936+81+4+5+2+7</mong>`

For example:

*  In Row 4, an 'A Truths' is :raw-html:`<mong>3r4c3468</mong>`. That is all the cells in row 4 containing candidate 3.
   'The Truth'  will be a 3 in one of those yet to be determined 4 cells.
*  In Column 4, an 'A Truths' is :raw-html:`<mong>5r1679c4</mong>`.  That is all the cells in column 4 containing 5.  'The
   Truth' will be a 5 in one of those yet to be determined 4 cells.
*  In Box 9, an 'A Truth' is :raw-html:`<mong>8r8c7,r9c79</mong>`.  That is all the cells in box 9 containing 8.  'The
   Truth' will be the 8 in one of those yet to be determined 3 cells.
*  In Cell :raw-html:`<mong>r6c1</mong>, <mong>1347r6c1</mong>` is 'A Truth'.  'The Truth' will be one of those Ccells in that cell.

|
|
|

.. _cc_premises_and_inferences:

Premises and Inferences
=======================

Source: http://sudopedia.enjoysudoku.com/Inference.html

Much of solving Sudoku puzzles involves asserting a premise, and deducing what conclusions can be
inferred.  Applying a premise is different to guessing.  A premise is used to infer logical
conclusions, whereas guessing is taking a chance on arbitrarily selecting what might be the correct
cell value and testing it.

The most basic assertion of a premise is on the state of a Ccell. For example, asserting
Ccell 3r7c2 True.

An inference implies a relationship (link) between two Ccells, characterised by the other Ccell's
response to the assertion of a premise on the first Ccell.  For example, If
:raw-html:`<mong>3r7c2</mong>` is True, then according to :ref:`Sudoku Rules <sudoku-rules>`,
:raw-html:`<mong>3r7c5</mong>` is False.

The full nature of the inference (link) between two ccells is characterised by the outcome of
asserting each Ccell True and False.  The important link (inference) relationships in Sudoku are:

*  Weak Links
*  Strong Links
*  Robust Links

.. _cc_weak_links:

Weak Links
----------

A weak link is formed by two ccells A and B, where they are either:

* Two or more same valued candidates in that house, or
* Two of three or more candidates in a cell.

.. figure:: images/links-eg1.png
   :name: fig-links-eg1
   :scale: 100%
   :alt: Links Example
   :align: right
   :figwidth: image

   Links Example

Observe that candidate 7 occurs more than twice in this example row 7 of a puzzle.
Notice that:

*  if :raw-html:`<mong>7r7c2</mong>` is True, then none of the same valued Ccells in row 7 can be
   True.
*  if :raw-html:`<mong>7r7c2</mong>` is False, it does not infer state of any other same valued
   Ccell in the row.

This is the characteristic defining a Weak Link.

Weak links are indicated by a “-”(dash) between the two Ccells, for example, A-B and conform to the following
inferences:

.. table:: Weak Link Inference Table
   :name: tbl-weak-link-it
   :width: 65%
   :widths: 30 70
   :header-alignment: center left
   :header-columns: 1
   :column-alignment: center left
   :column-dividers: single single none
   :column-wrapping: nn

   ================================================ ================================
   :raw-html:`<mono>A &nbsp;-&nbsp; B</mono>`
   ================================================ ================================
   :raw-html:`<mono>T &nbsp;&rarr;&nbsp; F</mono>`  If A is True then B is False
   :raw-html:`<mono>F &nbsp;&larr;&nbsp; T</mono>`  If B is True then A is False
   :raw-html:`<mono>F &nbsp;&rarr;&nbsp; ?</mono>`  If A is False then B is unknown
   :raw-html:`<mono>? &nbsp;&rarr;&nbsp; F</mono>`  If B is False then A is unknown
   ================================================ ================================

The conclusion drawn from weak link inferences is that if one end is True, the other
end is False, and if the one end is False, the other end can be either True or False.  That is,
both ends can never be simultaneously True, and at least one end is always False.

Ccells see each other through weak links (directly or indirectly - e.g. Weakly Ended Chain).  When
any two Ccells see each other, and the one Ccell is asserted True, the other Ccell must be asserted
False.

.. _cc_strong_links:

Strong Links
------------

A strong link between two Ccells A and B, exists either:
   *  In a conjugate pair (like :raw-html:`<mong>3r7c23</mong>` in :numref:`fig-links-eg1`), where
      two same valued Ccells are the only same valued Ccells in that house, or
   *  In a Bi-value cell where the two different valued ccells are the only ccells in that cell,
      like :raw-html:`<mong>78r7c4</mong>`.

In :numref:`fig-links-eg1` above:

*  If :raw-html:`<mong>3r7c2</mong>` is False, then :raw-html:`<mong>7r7c3</mong>` must be True, as only one of the conjugate pair must be True.
*  if :raw-html:`<mong>3r7c2</mong>` is True, then :raw-html:`<mong>7r7c3</mong>` must be False, as only one of the conjugate pair must be False

Strong links are indicated by a “=” linking the two ccells and obey the following inferences:

.. table:: Strong Link Inference Table
   :name: tbl-strong-link-it
   :width: 65%
   :widths: 30 70
   :header-alignment: center left
   :header-columns: 1
   :column-alignment: center left
   :column-dividers: single single none
   :column-wrapping: nn

   ================================================ =============================
   :raw-html:`<mono>A &nbsp;=&nbsp; B</mono>`
   ================================================ =============================
   :raw-html:`<mono>T &nbsp;&rarr;&nbsp; F</mono>`  If A is True then B is False
   :raw-html:`<mono>F &nbsp;&larr;&nbsp; T</mono>`  If B is True then A is False
   :raw-html:`<mono>F &nbsp;&rarr;&nbsp; T</mono>`  If A is False then B is True
   :raw-html:`<mono>T &nbsp;&larr;&nbsp; F</mono>`  If B is False then A is True
   ================================================ =============================

The conclusion drawn from a Strong Links is that ends always have opposite state.

Any two Strongly Linked Ccells must be of alternate state, therefore

* if the one end is True the other end is False
* Any third Ccell that can see both Strongly Linked Ccells cannot be True because the Strong link
  guarantees one of its ends to be True.

.. _cc_robust_links:

Robust Links
------------

Robust links are derived from other structures such as (but not limited to) Alternating Inference
Chains.  Robust link inferences are opposite to Weak Links.  Robust links are indicated with a
"\|\~|" where the outer bars indicate that this link is derived/indirect resulting from another
structure.

.. table:: Robust Link Inference Table
   :name: tbl-robust-link-it
   :width: 65%
   :widths: 30 70
   :header-alignment: center left
   :header-columns: 1
   :column-alignment: center left
   :column-dividers: single single none
   :column-wrapping: nn

   ================================================ ===============================
   :raw-html:`<mono>A |~| B</mono>`
   ================================================ ===============================
   :raw-html:`<mono>T &nbsp;&rarr;&nbsp; ?</mono>`  If A is True then B is unknown
   :raw-html:`<mono>? &nbsp;&larr;&nbsp; T</mono>`  If B is True then A is unknown
   :raw-html:`<mono>F &nbsp;&rarr;&nbsp; T</mono>`  If A is False then B is True
   :raw-html:`<mono>T &nbsp;&rarr;&nbsp; F</mono>`  If B is False then A is True
   ================================================ ===============================

The conclusion drawn from Robust Link Inferences is that if the one end is False, the other end is
True, and if the one end is True, the other end can be either True or False.  That is, both ends can
never be simultaneously False, at least one end is always True.

Any third Ccell that can see both ends of a Robust Link cannot be True, because at least one end is
guaranteed to be True. But if one end is asserted True, it is impossible to determine the state of
the other end with a Robust link.

Strong Links Masquerading as Weak
---------------------------------

A Strong link possesses all the attributes of a Weak Link (reversible and True to False linkage),
and then some (False to True linkage).  Therefore, it is possible to substitute a Strong link
for a Weak Link in the identifying patterns.

The same cannot be said in the reverse direction because a Weak Link is lacking the False to True
linkage.

When a strong link is substituted for a weak link, the Strong Link is said to be masquerading as a
Weak link.  The :raw-html:`<mono>'~'</mono>` symbol is used to indicate a masqueraded weak link.

Spatial Representation
======================

This concept comes from Denis Berthier’s Hidden Logic of Sudoku.
https://github.com/denis-berthier.

A solved puzzle can be described as a unique selection and ordering of 81 ccells (value,
row, column tuples) out of an exhaustive set of 729 ccells – where values, rows and columns can
assume any value between 1 and 9, and Sudoku rules apply Sudoku is a Finite Constraint Satisfaction
problem, and the recognition of patterns and their resolutions in solving the puzzle are the
constraint propagation techniques.

Conventionally, Sudoku puzzles are spatially represented as values on a 9 row by 9 column grid of
cells.  However, this is not the only possible spacial representation for Sudoku.  The same
puzzle can be represented as row numbers on a value x column number or any of the other 6 spatial
domains:

*  values on a row x column grid (default)
*  row numbers on a value x column grid
*  column numbers on a value x row grid
*  values on a cell x box grid
*  box numbers on a value x cell grid
*  cell numbers on a value x box grid

These are simply different representations of the exactly same puzzle board.  Nothing is
mathematically or logically different about a puzzle in any of these spatial representations.
The spatial representations simply view the puzzle from different perspectives.

Each perspective, exposes patterns that are hidden in other perspectives.  For example, a hidden
single or subset patten that is hidden in a row will be exposed when viewed as rows on a value by
column grid.

The true power of this concept is not in revealing hidden singles and subsets as exposed ones as
the effort of transforming the perspectives exceeds that of resolving those hidden patterns.
However, more complex patterns that were hidden become exposed, justifying the transformation
effort.

Viewing puzzles from different perspectives, come into their own with more complex patterns
such as chains, loops, nets, bent hidden subsets, etc. Transforming to another domain may make it
easier to spot exposed patterns that are hidden in the former domain.

