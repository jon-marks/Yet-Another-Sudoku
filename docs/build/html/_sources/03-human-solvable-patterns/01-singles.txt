.. title:: Yet another Sudoku | Human Solvable Patterns | Singles

=======
Singles
=======

Basic Solving Without Pencil Marks
----------------------------------

Many good sites that describe these techniques instead of me rehashing the information here:
   |  `Paul's Pages <https://paulspages.co.uk/sudokuxp/howtosolve/#Starting>`_
   |  `Kristanix <https://www.kristanix.com/sudokuepic/sudoku-solving-techniques.php>`_
   |  `Sudocue <https://www.sudocue.net/guide.php#squeezing>`_
   |  `Google Search: Solving without Pencil Marks <https://www.google.com/search?q=sudoku+solving+without+pencil+marks>`_
   |  `Google Search: Sudoku Cross Hatch <https://www.google.com/search?q=sudoku+cross+hatch>`_

Exposed Singles
---------------

A good explanation of `Exposed Singles here <http://hodoku.sourceforge.net/en/tech_singles.php#n1>`_, thank you Hodoku

Hidden Singles
--------------

A good explanation of `Hidden Singles here <http://hodoku.sourceforge.net/en/tech_singles.php#h1>`_, thank you Hodoku

Locked Singles
--------------

Pointing Locked Candidates
++++++++++++++++++++++++++

A good explanation of `Pointing Locked Candidates here <http://hodoku.sourceforge.net/en/tech_intersections.php#lc1>`_, thank you Hodoku


Claiming Locked Candidates
++++++++++++++++++++++++++

A good explanation of `Claiming Locked Candidates here <http://hodoku.sourceforge.net/en/tech_intersections.php#lc2>`_, thank you Hodoku

Empty Rectangles
----------------

Empty Rectangles are found by noticing 3 to 5 same value candidates in a box that describe both a row
and a column.

.. _fig-empty-rect-cd1:

.. figure:: images/empty-rect-cd1.png
   :scale: 100 %
   :alt: Empty Rectangle Pattern
   :align: right
   :figwidth: image

   Empty Rectangle Pattern

In :numref:`fig-empty-rect-cd1`, the three X candidates in box 1 describe row 3 and column 2.

X can only be True once in Box 1, **therefore**:

*  If Xr1c2 is True then:

   *  X cannot be True anywhere else along column 2, and
   *  Xr3c13 cannot be True in the box either, X is True somewhere along row 3 outside box 1.
   *  Where an X is found along column 2, such as Xr7c2, and it forms a strong link with another
      candidate X along row 7 outside of tower 1, such as Xr7c8, then
      because Xr7c2 cannot be True, Xr7c8 must be True, and if Xr7c8 is True, Xr3c8 cannot be 'The Truth'
      along row3.

*  If Xr1c2 is False then:

   *  Either Xr3c1 or Xr3c3 is True, ensuring that The Truth does not lie along row 3 outside box 1

*  Therefore, irrespective whether Xr1c2 is True or not, if Xr7c28 are strongly linked then Xr3c8 cannot
   be True and can be eliminated.

**Similarly**:

*  If Xr3c13 is 'A Truth' then:

   *  X cannot be True anywhere else along row 3, and
   *  Xr1c2 cannot be True in the box either, X is True somewhere along column 2 outside box 1.
   *  Where an X is found along row 3, such as Xr3c8, and it forms a strong link with another
      candidate X along column 8 outside of floor 1, such as Xr7c8, then
      because Xr3c8 cannot be True, Xr7c8 must be True, and if Xr7c8 is True, Xr7c2 cannot be 'The Truth'
      along column 2.

*  If both Xr3c13 are False then:

   *  Xr1c2 is True, ensuring that The Truth does not lie along column 2 outside box 1

*  Therefore, irrespective whether Xr3c13 is 'A Truth' or not, if Xr37c8 are strongly linked then Xr8c2 cannot
   be True and can be eliminated.

A box with two same value candidates can be resolved as an Empty Rectangle, however these patterns overlap
with Turbot Fish and Grouped X Chains.  Of these three patterns, a Turbot Fish is the easiest to resolve.



Let's go for a sample table too.  This is dummy text.

.. _tbl-dummy:

.. list-table:: A Dummy Table
   :widths: 20 80
   :align: left
   :width: 97%

   *  -  ``r6c5``
      -  The cell in location row 6, column 5 in the 9x9 cell grid
   *  -  ``b4``
      -  The cells in box 4.
   *  -  ``b4p5``
      -  The cell in box 4, position 5, boxes and positions in boxes are counted left to right then
         top to bottom, translates to ``r5c2``
   *  -  ``r2``
      -  The cells in row 2
   *  -  ``c6``
      -  The cells in column 6
   *  -  ``5r2c6``
      -  The candidate 5 in cell ``r2c6``
   *  -  ``r34c245``
      -  The grid of 6 cells â€“ ``r3c2``, ``r3c4``, ``r3c5``, ``r4c2``, ``r4c4`` and ``r4c5``
   *  -  ``r2r5,r3c456,r56c56``
      -  A collection of cells in a comma separated list
   *  -  ``r2c!378``
      -  All the cells in row 2 excluding ``r2c378``
   *  -  ``r!34c6``
      -  All the cells in column 6 excluding ``r35c6``



..
   The legend consists of all elements after the caption.  In this
   case, the legend consists of this paragraph and the following
   table:

..
   +------------------------------+-----------------------+
   | Symbol                       | Meaning               |
   +==============================+=======================+
   | .. image:: images/AIM.png    | Campground            |
   +------------------------------+-----------------------+
   | .. image:: images/AIM.png    | Lake                  |
   +------------------------------+-----------------------+
   | .. image:: images/AIM.png    | Mountain              |
   +------------------------------+-----------------------+

Underlining :underline:`some text`

Overlining :overline:`Some Text`

Strikethrough :strikethrough:`some text`

